@inject NavigationManager NavigationManager
@using Microsoft.JSInterop
@inject CarouselService carouselService

<div id="myCarousel" class="carousel slide" data-ride="carousel">
  <ol class="carousel-indicators">
    @* <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li> *@
    @* <li data-target="#carouselExampleIndicators" data-slide-to="1"></li> *@
    @* <li data-target="#carouselExampleIndicators" data-slide-to="2"></li> *@
    @for (int i = 0; i < Items.Count; i++)
    {
        <li data-target="#myCarousel" data-slide-to="@i" class="@((i == 0) ? "active" : "")"></li>
    }
  </ol>
  <div class="carousel-inner">
    @foreach(var item in Items)
    {
      <div class="carousel-item @((item == Items.First()) ? "active" : "")">
        
        <img class="d-block w-100" src="@NavigationManager.ToAbsoluteUri(NavigationManager.BaseUri + $"images/{@item.CategoryName.ToLower()}.gif")" alt="@item.Description">
      </div>
    }
    @* <div class="carousel-item active"> *@
    @*   <img class="d-block w-100" src="..." alt="First slide"> *@
    @* </div> *@
    @* <div class="carousel-item"> *@
    @*   <img class="d-block w-100" src="..." alt="Second slide"> *@
    @* </div> *@
    @* <div class="carousel-item"> *@
    @*   <img class="d-block w-100" src="..." alt="Third slide"> *@
    @* </div> *@
  </div>
  <a id="carouselexampleindicators-prev" class="carousel-control-prev" role="button" data-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="sr-only">Previous</span>
  </a>
  <a id="carouselexampleindicators-next" class="carousel-control-next" role="button" data-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="sr-only">Next</span>
  </a>
</div>

@code {
    [Parameter]
    public List<Category> Items { get; set; }
  
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
      if (firstRender)
      {
        await carouselService.InitializeCarousel();
      }
    }
}