@inject NavigationManager NavigationManager
@using Microsoft.JSInterop
@inject CarouselService carouselService

<div id="myCarousel" class="carousel slide">
  <div class="carousel-inner">
    @foreach(var item in Items)
    {
      <div class="carousel-item @((item == Items.First()) ? "active" : "")">
        <img class="d-block w-100" src="@NavigationManager.ToAbsoluteUri(NavigationManager.BaseUri + $"images/{@item.CategoryName.ToLower()}.gif")" alt="@item.Description">
      </div>
    }
  </div>
  <button class="carousel-control-prev" type="button" data-bs-target="#myCarousel" data-bs-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Previous</span>
  </button>
  <button class="carousel-control-next" type="button" data-bs-target="#myCarousel" data-bs-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Next</span>
  </button>
</div>

@code {
    [Parameter]
    public List<Category> Items { get; set; }
  
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
      if (firstRender)
      {
        await carouselService.InitializeCarousel();
      }
    }
}