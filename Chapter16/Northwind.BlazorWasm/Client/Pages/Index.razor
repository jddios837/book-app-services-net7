@page "/"
@inject IHttpClientFactory httpClientFactory

<h1>Hello, Blazor!</h1>

<div class="row">
    <div class="col">
        <div class="alert alert-info">
            <h4>Progress of database deletion</h4>
            <ProgressBar
                Value="25"
                IsAnimated="true"
                ShowValue="true"
                LabelText="Progress of database deletion">
            </ProgressBar>
        </div>
    </div>
    <div class="col">
        <DialogBox DialogTitle="Delete Database"
                   PrimaryButtonText="Yes"
                   OnClickPrimary="Yes_Click"
                   SecondaryButtonText="No"
                   OnCLickSecondary="No_Click">
            Are your sure you want to delete the entire database? Really?
        </DialogBox>
    </div>
</div>

<div class="row">
    <div class="col">
        <Alert IsDismissable="true"
               Icon="@(BootstrapIcons.ExclamationTriangleFill)"
               ColorTheme="@(BootstrapColors.Warning)"
               Title="Warning"
               Message="Deleting the database cannot be undone."></Alert>
    </div>
</div>

<div class="row">
    <div class="col">
        <Carousel Items="_categories"/>
    </div>
</div>

<div class="row">
    <div class="col">
        <Employees Country="USA" />
        <Employees />
    </div>
</div>

@code {

    private List<Category>? _categories = new();

    protected override async Task OnParametersSetAsync()
    {
        HttpClient client = httpClientFactory.CreateClient("Northwind.BlazorWasm.ServerAPI");
        string path = "api/categories";

        try
        {
            var employeesJson = await client.GetStringAsync(path);
            
            // _categories = JsonSerializer.Deserialize<List<Category>>(employeesJson, 
            // new JsonSerializerOptions { PropertyNameCaseInsensitive = true });

            _categories = new List<Category>()
            {
                new() { CategoryId = 1, CategoryName = "seafood", Description = "Sea Food" },
                new() { CategoryId = 2, CategoryName = "meat", Description = "Meat" },
                new() { CategoryId = 3, CategoryName = "cereals", Description = "Cereals" }
            };
        }
        catch (Exception e)
        {
            Console.WriteLine($"{e.GetType()}: {e.Message}");
        }
    }

    private void Yes_Click(MouseEventArgs obj)
    {
        Console.WriteLine("User clicked 'Primary' button at ({0}, {1}).", arg0: obj.ClientX, arg1: obj.ClientY);
    }

    private void No_Click(MouseEventArgs obj)
    {
        Console.WriteLine("User clicked 'Secondary' button at ({0}, {1}).", arg0: obj.ClientX, arg1: obj.ClientY);
    }
}